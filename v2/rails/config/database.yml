default: &default
  reconnect: true
  url: mysql2-makara:///
  makara:
    # Manage Stickiness
    #
    # When sticky:true, once a query as been sent to master, all queries for the rest of the request will also be sent to master.
    # In addition, the cookie described above will be set client side with an expiration defined by time at end of original request + master_ttl.
    # As long as the cookie is valid, all requests will send queries to master.
    # When sticky:false, only queries that need to go to master will go there. Subsequent read queries in the same request will go to slaves.
    #
    # sticky: true
    # master_ttl: 5

    connections:
      - name: master-1
        role: master
        url: "<%= ENV['MASTER_URL'] %>"
        # do not blacklist node at any error, useful in case of one master
        # likely solves master's blacklisting issue at https://github.com/taskrabbit/makara/issues/101
        disable_blacklist: true

      - name: replica-1
        url: "<%= ENV['REPLICA_URL'] %>"

        # Matchers
        #
        # If any of these connection errors matched, it does "[distribute_reads] No replicas available. Falling back to master pool."
        # So if slaves DNS is not resolved, it reads from master.
        blacklist_duration: 5
        connection_error_matchers:
          # Covers the error: "Unknown MySQL server host 'mysql-replica' (-2)"
           - !ruby/regexp '/Unknown MySQL server host/'
test:
  <<: *default

development:
  <<: *default

production:
  <<: *default
